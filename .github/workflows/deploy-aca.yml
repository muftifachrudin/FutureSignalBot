name: Build and Deploy to Azure Container Apps

on:
  push:
    branches: ["main"]

permissions:
  contents: read
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: futuresignalbot
      REGISTRY_LOGIN_SERVER: ${{ vars.ACR_LOGIN_SERVER }}
      CONTAINER_APP_NAME: ${{ vars.ACA_APP_NAME }}
      RESOURCE_GROUP: ${{ vars.AZURE_RESOURCE_GROUP }}
      CONTAINER_APP_ENV: ${{ vars.ACA_ENV_NAME }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Azure login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Azure Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and push image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Deploy to Azure Container Apps
        uses: azure/CLI@v2
        with:
          inlineScript: |
            set -e
            IMAGE_TAG=${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
            # Create or update the container app
            az containerapp create \
              --name ${{ env.CONTAINER_APP_NAME }} \
              --resource-group ${{ env.RESOURCE_GROUP }} \
              --environment ${{ env.CONTAINER_APP_ENV }} \
              --image $IMAGE_TAG \
              --ingress external --target-port 8080 \
              --min-replicas 1 --max-replicas 1 \
              --env-vars \
                TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }} \
                MEXC_API_KEY=${{ secrets.MEXC_API_KEY }} \
                MEXC_SECRET_KEY=${{ secrets.MEXC_SECRET_KEY }} \
                COINGLASS_API_KEY=${{ secrets.COINGLASS_API_KEY }} \
                GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }} \
                TZ=Asia/Jakarta \
              --registry-server ${{ env.REGISTRY_LOGIN_SERVER }} \
              --registry-username ${{ secrets.ACR_USERNAME }} \
              --registry-password ${{ secrets.ACR_PASSWORD }} \
            || az containerapp update \
              --name ${{ env.CONTAINER_APP_NAME }} \
              --resource-group ${{ env.RESOURCE_GROUP }} \
              --image $IMAGE_TAG \
              --set-env-vars \
                TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }} \
                MEXC_API_KEY=${{ secrets.MEXC_API_KEY }} \
                MEXC_SECRET_KEY=${{ secrets.MEXC_SECRET_KEY }} \
                COINGLASS_API_KEY=${{ secrets.COINGLASS_API_KEY }} \
                GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }} \
                TZ=Asia/Jakarta
